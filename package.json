{
  "name": "@tamyla/lego-framework",
  "version": "1.3.1",
  "description": "Reusable framework for Lego-style software architecture on Cloudflare Workers + D1",
  "type": "module",
  "sideEffects": [
    "**/worker/**",
    "**/index.js",
    "**/bin/**"
  ],
  "main": "dist/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": "./dist/index.js",
    "./services": "./dist/services/GenericDataService.js",
    "./schema": "./dist/schema/SchemaManager.js",
    "./modules": "./dist/modules/ModuleManager.js",
    "./routing": "./dist/routing/EnhancedRouter.js",
    "./handlers": "./dist/handlers/GenericRouteHandler.js",
    "./config": "./dist/config/index.js",
    "./config/discovery": "./dist/config/discovery/domain-discovery.js",
    "./worker": "./dist/worker/index.js",
    "./utils": "./dist/utils/index.js",
    "./utils/deployment": "./dist/utils/deployment/index.js",
    "./orchestration": "./dist/orchestration/index.js",
    "./deployment": "./dist/deployment/index.js",
    "./database": "./dist/database/index.js"
  },
  "bin": {
    "lego-create-service": "./bin/service-management/create-service.js",
    "lego-init-service": "./bin/service-management/init-service.js"
  },
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist",
    "bin/service-management",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "babel src/ --out-dir dist/",
    "postbuild": "npm run check:bundle",
    "clean": "rimraf dist",
    "clean:generated": "rimraf generated",
    "clean:all": "npm run clean && npm run clean:generated",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint --config ./eslint.config.js src",
    "lint:fix": "eslint --config ./eslint.config.js src --fix",
    "check:bundle": "node scripts/utilities/check-bundle.js || echo 'No bundle check script yet'",
    "analyze:bundle": "echo 'Bundle analysis not implemented yet'",
    "prepublishOnly": "npm run build",
    "postpublish": "echo 'Published successfully to npm registry!'",
    "publish:beta": "npm publish --tag beta",
    "publish:latest": "npm publish --tag latest",
    "create-service": "node bin/create-service.js",
    "init-service": "node bin/init-service.js"
  },
  "keywords": [
    "cloudflare",
    "workers",
    "d1",
    "framework",
    "reusable",
    "microservices",
    "lego-architecture",
    "serverless",
    "edge-computing",
    "modular"
  ],
  "author": "Tamyla",
  "license": "MIT",
  "dependencies": {
    "wrangler": ">=3.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.23.0",
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "commander": "^11.0.0",
    "eslint": "^8.54.0",
    "jest": "^29.7.0",
    "rimraf": "^5.0.10",
    "semantic-release": "^24.2.9"
  },
  "peerDependencies": {
    "wrangler": ">=3.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tamylaa/lego-framework.git"
  },
  "bugs": {
    "url": "https://github.com/tamylaa/lego-framework/issues"
  },
  "homepage": "https://lego-framework.tamyla.com",
  "release": {
    "branches": [
      "master"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      [
        "@semantic-release/npm",
        {
          "npmPublish": true,
          "tarballDir": "dist"
        }
      ],
      [
        "@semantic-release/git",
        {
          "assets": [
            "CHANGELOG.md",
            "package.json",
            "package-lock.json"
          ],
          "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ],
      "@semantic-release/github"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "directories": {
    "example": "templates"
  }
}
