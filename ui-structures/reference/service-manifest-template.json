{
  "template": {
    "name": "service-manifest",
    "description": "Comprehensive service configuration and history file generated during LEGO Framework service creation",
    "version": "1.0.0",
    "purpose": "Complete audit trail, service consumption, and rectification support"
  },
  "metadata": {
    "serviceId": "auto-generated-uuid",
    "createdAt": "2025-10-08T10:30:00Z",
    "createdBy": "LEGO Framework v2.0.0",
    "creationMethod": "three-phase-collection",
    "frameworkVersion": "2.0.0",
    "nodeVersion": "18.17.0",
    "platform": "windows",
    "workingDirectory": "C:\\Users\\Admin\\Documents\\coding\\tamyla\\lego-framework"
  },
  "coreInputs": {
    "description": "The 6 absolutely required inputs provided by the user",
    "providedAt": "2025-10-08T10:25:00Z",
    "validationStatus": "passed",
    "inputs": {
      "service-name": "user-service",
      "environment": "development",
      "domain-name": "mycompany.com",
      "service-type": "api",
      "customer-name": null,
      "cloudflare-api-token": null
    }
  },
  "userConfirmableInputs": {
    "description": "The 15 user-confirmable inputs with user's final decisions",
    "confirmedAt": "2025-10-08T10:27:00Z",
    "customizations": 3,
    "acceptances": 12,
    "inputs": {
      "display-name": "User Service",
      "description": "A api service built with LEGO Framework for user management",
      "version": "1.0.0",
      "author": "LEGO Framework",
      "production-url": "api.mycompany.com",
      "staging-url": "staging-api.mycompany.com",
      "development-url": "dev-api.mycompany.com",
      "service-directory": "./services/user-service",
      "database-name": "user-service-db",
      "worker-name": "user-service-worker",
      "log-level": "debug",
      "cors-policy": "*",
      "env-prefix": "DEV_"
    },
    "customizationDetails": [
      {
        "field": "description",
        "action": "customized",
        "original": "A api service built with LEGO Framework",
        "final": "A api service built with LEGO Framework for user management",
        "reason": "Added specific functionality description"
      },
      {
        "field": "log-level",
        "action": "customized",
        "original": "debug",
        "final": "debug",
        "reason": "Confirmed development logging level"
      }
    ]
  },
  "autoGeneratedInputs": {
    "description": "The 66 absolutely generatable inputs created automatically",
    "generatedAt": "2025-10-08T10:28:00Z",
    "generationStatus": "completed",
    "successCount": 66,
    "errorCount": 0,
    "categories": {
      "fileDiscovery": {
        "count": 8,
        "status": "completed",
        "inputs": {
          "packageJsonPath": "./package.json",
          "wranglerTomlPath": "./wrangler.toml",
          "tsconfigJsonPath": "./tsconfig.json",
          "eslintConfigPath": "./eslint.config.js",
          "jestConfigPath": "./jest.config.js",
          "babelConfigPath": "./babel.config.js",
          "dockerfilePath": "./Dockerfile",
          "readmePath": "./README.md"
        }
      },
      "apiResolution": {
        "count": 12,
        "status": "completed",
        "inputs": {
          "cloudflareAccountId": "1234567890abcdef",
          "cloudflareZoneId": "fedcba0987654321",
          "d1DatabaseId": "user-service-db-uuid",
          "workerDeploymentUrl": "https://user-service.mycompany.com",
          "gitRepositoryUrl": "https://github.com/tamylaa/lego-framework",
          "gitBranch": "master",
          "gitCommitHash": "a1b2c3d4e5f6",
          "npmRegistry": "https://registry.npmjs.org",
          "cloudflareApiVersion": "v4",
          "domainRegistrar": "namecheap",
          "sslCertificateExpiry": "2026-10-08",
          "dnsRecords": ["A", "CNAME", "TXT"]
        }
      },
      "conventionBased": {
        "count": 28,
        "status": "completed",
        "inputs": {
          "serviceTemplate": "api-template-v2",
          "deploymentStrategy": "cloudflare-worker-d1",
          "monitoringConfig": "basic-api-monitoring",
          "securityPolicies": "development-security",
          "resourceLimits": "small-service-limits",
          "environmentVariables": {
            "DEV_DATABASE_URL": "postgresql://localhost:5432/user_service_dev",
            "DEV_REDIS_URL": "redis://localhost:6379",
            "DEV_JWT_SECRET": "dev-secret-key",
            "DEV_API_PORT": "3000"
          },
          "filePermissions": "755",
          "cacheSettings": "development-cache",
          "backupConfigurations": "daily-backup",
          "healthCheckEndpoints": ["/health", "/ready", "/metrics"],
          "middlewareStack": ["cors", "helmet", "compression", "logging"],
          "errorHandling": "development-error-handling",
          "rateLimiting": "development-rate-limits",
          "apiVersioning": "header-based",
          "documentationFormat": "openapi-3.0",
          "testingFramework": "jest",
          "codeCoverage": "80%",
          "lintingRules": "lego-standard",
          "buildTool": "esbuild",
          "packageManager": "npm",
          "ciCdPipeline": "github-actions",
          "deploymentTarget": "cloudflare-pages",
          "rollbackStrategy": "immediate-rollback",
          "scalingStrategy": "manual-scaling",
          "costOptimization": "development-optimization"
        }
      },
      "contextInference": {
        "count": 18,
        "status": "completed",
        "inputs": {
          "debugMode": true,
          "nodeEnv": "development",
          "logFormat": "json",
          "timestampFormat": "ISO-8601",
          "timezone": "UTC",
          "locale": "en-US",
          "currency": "USD",
          "dateFormat": "YYYY-MM-DD",
          "timeFormat": "HH:mm:ss",
          "numberFormat": "en-US",
          "errorReporting": "console-only",
          "performanceMonitoring": "basic",
          "memoryLimit": "512MB",
          "cpuLimit": "0.5",
          "networkTimeout": "30s",
          "retryAttempts": 3,
          "circuitBreaker": "disabled",
          "featureFlags": {}
        }
      }
    }
  },
  "serviceConfiguration": {
    "description": "Final computed configuration used to create the service",
    "computedAt": "2025-10-08T10:28:00Z",
    "config": {
      "service": {
        "name": "user-service",
        "displayName": "User Service",
        "description": "A api service built with LEGO Framework for user management",
        "version": "1.0.0",
        "type": "api",
        "environment": "development",
        "author": "LEGO Framework"
      },
      "networking": {
        "domain": "mycompany.com",
        "urls": {
          "production": "api.mycompany.com",
          "staging": "staging-api.mycompany.com",
          "development": "dev-api.mycompany.com"
        },
        "corsPolicy": "*",
        "ssl": true,
        "http2": true
      },
      "infrastructure": {
        "provider": "cloudflare",
        "worker": {
          "name": "user-service-worker",
          "runtime": "cloudflare-worker",
          "memory": "128MB",
          "cpu": "100ms"
        },
        "database": {
          "type": "D1",
          "name": "user-service-db",
          "location": "WEUR"
        }
      },
      "deployment": {
        "strategy": "cloudflare-worker-d1",
        "directory": "./services/user-service",
        "buildCommand": "npm run build",
        "startCommand": "npm run start",
        "healthCheck": "/health"
      }
    }
  },
  "fileManifest": {
    "description": "All files created/modified during service generation",
    "createdAt": "2025-10-08T10:28:00Z",
    "files": {
      "created": [
        "./services/user-service/package.json",
        "./services/user-service/src/index.js",
        "./services/user-service/src/routes.js",
        "./services/user-service/src/middleware.js",
        "./services/user-service/test/unit.spec.js",
        "./services/user-service/test/integration.spec.js",
        "./services/user-service/README.md",
        "./services/user-service/.env.example",
        "./services/user-service/wrangler.toml",
        "./services/user-service/jest.config.js",
        "./services/user-service/eslint.config.js"
      ],
      "modified": [
        "./package.json",
        "./wrangler.toml"
      ],
      "templates": [
        "api-template-v2",
        "cloudflare-worker-template",
        "d1-database-template",
        "jest-config-template",
        "eslint-config-template"
      ]
    }
  },
  "relationships": {
    "description": "Relationships to other services and resources",
    "dependsOn": [],
    "usedBy": [],
    "shares": {
      "database": "user-service-db",
      "domain": "mycompany.com"
    },
    "relatedServices": []
  },
  "auditTrail": {
    "description": "Complete history of service creation and modifications",
    "entries": [
      {
        "timestamp": "2025-10-08T10:25:00Z",
        "action": "core-inputs-collected",
        "actor": "user",
        "details": "Collected 6 core inputs via interactive prompts"
      },
      {
        "timestamp": "2025-10-08T10:27:00Z",
        "action": "inputs-confirmed",
        "actor": "user",
        "details": "User confirmed 12 defaults and customized 3 inputs"
      },
      {
        "timestamp": "2025-10-08T10:28:00Z",
        "action": "service-generated",
        "actor": "LEGO Framework",
        "details": "Successfully generated service with 66 auto-generated configurations"
      }
    ]
  },
  "consumption": {
    "description": "Information for other tools/services to consume this service",
    "api": {
      "baseUrl": "https://dev-api.mycompany.com",
      "documentation": "./services/user-service/README.md",
      "openapiSpec": "./services/user-service/openapi.yaml",
      "healthCheck": "https://dev-api.mycompany.com/health"
    },
    "dependencies": {
      "runtime": ["@cloudflare/workers-types", "hono", "zod"],
      "development": ["jest", "@types/jest", "eslint"]
    },
    "environmentVariables": [
      "DEV_DATABASE_URL",
      "DEV_REDIS_URL",
      "DEV_JWT_SECRET",
      "DEV_API_PORT"
    ],
    "ports": [3000],
    "commands": {
      "install": "npm install",
      "build": "npm run build",
      "test": "npm test",
      "start": "npm start",
      "deploy": "npm run deploy"
    }
  },
  "rectification": {
    "description": "Information to help fix issues or recreate the service",
    "troubleshooting": {
      "commonIssues": [
        "Database connection fails - check DEV_DATABASE_URL",
        "Worker deployment fails - verify Cloudflare credentials",
        "CORS errors - check cors-policy configuration"
      ],
      "logs": "./logs/user-service/",
      "debugMode": true,
      "rollbackCommand": "npm run rollback"
    },
    "recreation": {
      "command": "lego recreate user-service --from-manifest",
      "requiredInputs": "All inputs stored in this manifest",
      "validationSteps": [
        "Verify Cloudflare credentials",
        "Check domain availability",
        "Validate environment variables"
      ]
    }
  },
  "validation": {
    "description": "Validation results for the generated service",
    "performedAt": "2025-10-08T10:29:00Z",
    "overallStatus": "passed",
    "checks": {
      "configuration": "passed",
      "dependencies": "passed",
      "build": "passed",
      "tests": "passed",
      "deployment": "ready"
    },
    "warnings": [],
    "errors": []
  }
}