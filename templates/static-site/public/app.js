// App JavaScript for {{SERVICE_DISPLAY_NAME}}
// Generated by Clodo Framework

document.addEventListener('DOMContentLoaded', function() {
    // Update environment info
    fetch('/info')
        .then(response => response.json())
        .then(data => {
            const envElement = document.getElementById('environment');
            if (envElement) {
                envElement.textContent = data.environment;
            }

            // Add some dynamic content based on service info
            console.log('Service Info:', data);
        })
        .catch(error => {
            console.error('Failed to load service info:', error);
            const envElement = document.getElementById('environment');
            if (envElement) {
                envElement.textContent = 'unknown';
            }
        });

    // Add click tracking to navigation
    const navLinks = document.querySelectorAll('nav a');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            console.log('Navigation:', this.textContent, this.href);

            // For SPA-like behavior, you could prevent default and handle routing here
            // e.preventDefault();
            // handleRoute(this.href);
        });
    });

    // Add some interactive features
    const hero = document.getElementById('hero');
    if (hero) {
        hero.addEventListener('click', function() {
            this.style.transform = 'scale(1.02)';
            setTimeout(() => {
                this.style.transform = 'scale(1)';
            }, 150);
        });
    }

    // Service worker registration (if you add one later)
    if ('serviceWorker' in navigator) {
        // navigator.serviceWorker.register('/sw.js')
        //     .then(registration => console.log('SW registered'))
        //     .catch(error => console.log('SW registration failed'));
    }
});

// Utility functions
function handleRoute(url) {
    // Implement client-side routing if needed
    console.log('Routing to:', url);
    // You could load content dynamically here
}

function showNotification(message, type = 'info') {
    // Simple notification system
    const notification = document.createElement('div');
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem;
        background: ${type === 'error' ? '#ff6b6b' : '#51cf66'};
        color: white;
        border-radius: 4px;
        z-index: 1000;
        animation: slideIn 0.3s ease-out;
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-out';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}

// Add some CSS animations
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }

    @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
document.head.appendChild(style);